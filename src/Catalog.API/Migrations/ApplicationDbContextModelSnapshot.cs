// <auto-generated />
using Catalog.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Catalog.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Catalog.API.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("Id"), 10L, null, null, null, null, null);

                    b.Property<string>("CategoryName")
                        .HasColumnType("text")
                        .HasColumnName("category_name");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Samsung"
                        });
                });

            modelBuilder.Entity("Catalog.API.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("Id"), 11L, null, null, null, null, null);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .HasColumnType("text")
                        .HasColumnName("product_name");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("integer")
                        .HasColumnName("unit_in_stock");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Price = 1000,
                            ProductName = "iPhone 15 Promax",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Price = 500,
                            ProductName = "iPhone 15 Gold",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Price = 1000,
                            ProductName = "Apple Watch Ultra",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Price = 300,
                            ProductName = "Apple Airpod 3",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Price = 3000,
                            ProductName = "Vision Pro",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Price = 800,
                            ProductName = "Samsung S24",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Price = 900,
                            ProductName = "Samsung A50",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Price = 500,
                            ProductName = "Galaxy Watch",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Price = 700,
                            ProductName = "Samsung S23",
                            UnitInStock = 10
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Price = 100,
                            ProductName = "Samsung A35",
                            UnitInStock = 10
                        });
                });

            modelBuilder.Entity("Catalog.API.Data.Entities.Product", b =>
                {
                    b.HasOne("Catalog.API.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Catalog.API.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
